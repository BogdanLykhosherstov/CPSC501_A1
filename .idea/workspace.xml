<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="823f0856-f4f6-4fb2-a52c-4ea1ead21387" name="Default Changelist" comment="Refactor Notes v.2:&#10;1. Primitive Obsession fix: Instead of using primitives as a return type for makeMilk() in Cow, create a Milk class the can hold those properties. (4 th refactoring)&#10;2. Lazy Class - Collapse Hierarchy: Collapse Dog class and its 1 method into its super class - Animal (5th refactoring).&#10;3. Wrote more tests for aforementioned changes. Improved existing tests a bit.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Farm/Pig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Farm/Pig.java" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FavoritesManager">
    <favorites_list name="A1" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1RrFFeZPT12WA2h1lTaPZewlsXC" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="Downloaded.Files.Path.Enabled" value="true" />
    <property name="Repository.Attach.Annotations" value="false" />
    <property name="Repository.Attach.JavaDocs" value="false" />
    <property name="Repository.Attach.Sources" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="extract.method.default.visibility" value="public" />
  </component>
  <component name="RecentsManager">
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="Farm" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/test" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="JUnit.FarmTest">
    <configuration name="FarmTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="A1" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="Farm.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="Farm" />
      <option name="MAIN_CLASS_NAME" value="Farm.FarmTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FarmTest.Animal_Create" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="A1" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="Farm.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="Farm" />
      <option name="MAIN_CLASS_NAME" value="Farm.FarmTest" />
      <option name="METHOD_NAME" value="Animal_Create" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FarmTest.Animal_EatWrongFood" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="A1" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="Farm.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="Farm" />
      <option name="MAIN_CLASS_NAME" value="Farm.FarmTest" />
      <option name="METHOD_NAME" value="Animal_EatWrongFood" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FarmTest.Animal_MakeSound" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="A1" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="Farm.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="Farm" />
      <option name="MAIN_CLASS_NAME" value="Farm.FarmTest" />
      <option name="METHOD_NAME" value="Animal_MakeSound" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FarmTest.Cow_MakeInvalidMilk" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="A1" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="Farm.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="Farm" />
      <option name="MAIN_CLASS_NAME" value="Farm.FarmTest" />
      <option name="METHOD_NAME" value="Cow_MakeInvalidMilk" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.FarmTest" />
        <item itemvalue="JUnit.FarmTest.Animal_Create" />
        <item itemvalue="JUnit.FarmTest.Animal_MakeSound" />
        <item itemvalue="JUnit.FarmTest.Animal_EatWrongFood" />
        <item itemvalue="JUnit.FarmTest.Cow_MakeInvalidMilk" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="823f0856-f4f6-4fb2-a52c-4ea1ead21387" name="Default Changelist" comment="" />
      <created>1570417205141</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1570417205141</updated>
    </task>
    <task id="LOCAL-00001" summary="Refactor Notes:&#10;1. Removed redundant followFarmer() code in Animal. &#10;    - Ended up never creating Farmer class &#10;2. Pull up makeSound() method due to duplicate code functionality in sibling classes into superclass of Animal. &#10;3. Extract method of checkEmptyBowl() in Pig class&#10;    1. Created a getter for isBowlEmpty for testing purposes&#10;4. Wrote unit tests to test the above.">
      <created>1570674625552</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1570674625553</updated>
    </task>
    <task id="LOCAL-00002" summary="Refactor Notes v.2:&#10;1. Primitive Obsession fix: Instead of using primitives as a return type for makeMilk() in Cow, create a Milk class the can hold those properties. (4 th refactoring)&#10;2. Lazy Class - Collapse Hierarchy: Collapse Dog class and its 1 method into its super class - Animal (5th refactoring).&#10;3. Wrote more tests for aforementioned changes. Improved existing tests a bit.">
      <created>1570678173311</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1570678173311</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ORDER">
      <list>
        <option value="0" />
        <option value="2" />
        <option value="3" />
        <option value="1" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="1">
          <value>
            <State>
              <option name="SHOW_ONLY_AFFECTED_CHANGES" value="true" />
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="HEAD" />
                      </list>
                    </value>
                  </entry>
                  <entry key="structure">
                    <value>
                      <list>
                        <option value="dir:/Users/BigB/Desktop/Courses/CPSC501/A1/src/Farm" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="OPEN_TABS">
      <set>
        <option value="1" />
      </set>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
    <option name="CHECK_NEW_TODO" value="false" />
    <MESSAGE value="Refactor Notes:&#10;1. Removed redundant followFarmer() code in Animal. &#10;    - Ended up never creating Farmer class &#10;2. Pull up makeSound() method due to duplicate code functionality in sibling classes into superclass of Animal. &#10;3. Extract method of checkEmptyBowl() in Pig class&#10;    1. Created a getter for isBowlEmpty for testing purposes&#10;4. Wrote unit tests to test the above." />
    <MESSAGE value="Refactor Notes v.2:&#10;1. Primitive Obsession fix: Instead of using primitives as a return type for makeMilk() in Cow, create a Milk class the can hold those properties. (4 th refactoring)&#10;2. Lazy Class - Collapse Hierarchy: Collapse Dog class and its 1 method into its super class - Animal (5th refactoring).&#10;3. Wrote more tests for aforementioned changes. Improved existing tests a bit." />
    <option name="LAST_COMMIT_MESSAGE" value="Refactor Notes v.2:&#10;1. Primitive Obsession fix: Instead of using primitives as a return type for makeMilk() in Cow, create a Milk class the can hold those properties. (4 th refactoring)&#10;2. Lazy Class - Collapse Hierarchy: Collapse Dog class and its 1 method into its super class - Animal (5th refactoring).&#10;3. Wrote more tests for aforementioned changes. Improved existing tests a bit." />
  </component>
</project>